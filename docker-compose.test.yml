x-app: &default-app
  build:
    context: "."
    target: "app"
    args:
      - "UID=${UID:-1000}"
      - "GID=${GID:-1000}"
      - "DEBUG=${DEBUG:-false}"
      - "NODE_ENV=${NODE_ENV:-production}"
  env_file:
    - ".env"
  restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
  stop_grace_period: "3s"
  tty: true
  volumes:
    - "${DOCKER_WEB_VOLUME:-./public_collected:/app/public_collected}"
    - "${DOCKER_UPLOADS_VOLUME:-./uploads:/app/src/uploads}"

x-assets: &default-assets
  build:
    context: "."
    target: "assets"
    args:
      - "UID=${UID:-1000}"
      - "GID=${GID:-1000}"
      - "NODE_ENV=${NODE_ENV:-production}"
  env_file:
    - ".env"
  profiles: [ "assets" ]
  restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
  stop_grace_period: "0"
  tty: true
  volumes:
    - ".:/app"

services:
  python:
    <<: *default-app
    profiles: [ "python" ]

  postgres-test:
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      # POSTGRES_DB: "${POSTGRES_DB}"
    image: "postgres:16.2-bookworm"
    restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
    stop_grace_period: "3s"

  redis-test:
    image: "redis:7.2.4-bookworm"
    profiles: [ "redis" ]
    restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
    stop_grace_period: "3s"

  web-test:
    <<: *default-app
    depends_on:
      stripe:
        condition: "service_started"
        required: true
      postgres-test:
        condition: "service_started"
        required: true
      redis-test:
        condition: "service_started"
        required: true
      stripe-mock:
        condition: "service_started"
        required: true
    healthcheck:
      test: "${DOCKER_WEB_HEALTHCHECK_TEST:-curl localhost:8001/up}"
      interval: "60s"
      timeout: "3s"
      start_period: "5s"
      retries: 3
    ports:
      - "8001:8000"
    env_file:
      - path: .env.test

  stripe:
    image: "stripe/stripe-cli"
    command:
      - "listen"
      - "--api-key"
      - "$STRIPE_SECRET_KEY"
      - "--forward-to"
      - "web:8000/webhook/stripe"

  stripe-mock:
    image: "stripe/stripe-mock"
    ports:
      - "12111-12112:12111-12112"

  worker:
    <<: *default-app
    command: celery -A app worker -l "${CELERY_LOG_LEVEL:-info}"
    entrypoint: [ ]
    deploy:
      resources:
        limits:
          cpus: "${DOCKER_WORKER_CPUS:-0}"
          memory: "${DOCKER_WORKER_MEMORY:-0}"
    profiles: [ "worker" ]

  js:
    <<: *default-assets
    command: "../run yarn:build:js"

  css:
    <<: *default-assets
    command: "../run yarn:build:css"

volumes:
  postgres: { }
  redis: { }
